{"version":3,"sources":["context.js","Components/contacts/Contact.js","Components/contacts/Contacts.js","Components/layouts/Header.js","Components/layouts/TextInputGroup.js","Components/contacts/AddContact.js","Components/layouts/pages/About.js","Components/layouts/pages/NotFound.js","Components/contacts/EditContact.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","contacts","filter","contact","id","payload","map","Provider","dispatch","setState","axios","get","res","this","data","value","props","children","Component","Consumer","Contact","show","deleteClick","a","async","delete","name","email","phone","className","style","cursor","onClick","color","float","bind","to","marginRight","defaultProps","Contacts","Fragment","key","Header","branding","TextInputGroup","label","placeholder","onChange","error","htmlFor","classnames","AddContact","errors","onSubmit","e","preventDefault","newContact","post","history","push","target","NotFound","EditContact","updContact","match","params","put","App","exact","path","component","About","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3800064f.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\n\nconst Context = React.createContext();\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"DELETE_CONTACT\":\n      return {\n        ...state,\n        contacts: state.contacts.filter(\n          contact => contact.id !== action.payload\n        )\n      };\n    case \"ADD_CONTACT\":\n      return {\n        ...state,\n        contacts: [...state.contacts, action.payload]\n      };\n    case \"EDIT_CONTACT\":\n      return {\n        ...state,\n        contacts: state.contacts.map(contact =>\n          contact.id === action.payload.id\n            ? (contact = action.payload)\n            : contact\n        )\n      };\n    default:\n      return state;\n  }\n};\n\nexport class Provider extends Component {\n  state = {\n    contacts: [],\n    dispatch: action => this.setState(state => reducer(state, action))\n  };\n\n  async componentDidMount() {\n    const res = await axios.get(\"https://jsonplaceholder.typicode.com/users\");\n    this.setState({ contacts: res.data });\n  }\n\n  render() {\n    return (\n      <Context.Provider value={this.state}>\n        {this.props.children}\n      </Context.Provider>\n    );\n  }\n}\n\nexport const Consumer = Context.Consumer;\n","import React, { Component } from \"react\";\nimport propTypes from \"prop-types\";\nimport { Consumer } from \"../../context\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\n\nclass Contact extends Component {\n  state = {\n    show: false\n  };\n  deleteClick = async (id, dispatch) => {\n    await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\n    dispatch({ type: \"DELETE_CONTACT\", payload: id });\n  };\n  render() {\n    const { show } = this.state;\n    const { id, name, email, phone } = this.props.contact;\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n          return (\n            <div className=\"card card-body mb-3\">\n              <h1>\n                Name : {name}{\" \"}\n                <i\n                  className=\"fas fa-angle-down\"\n                  style={{ cursor: \"pointer\" }}\n                  onClick={() => this.setState({ show: !this.state.show })}\n                ></i>\n                <i\n                  className=\"fas fa-times\"\n                  style={{ cursor: \"pointer\", color: \"red\", float: \"right\" }}\n                  onClick={this.deleteClick.bind(this, id, dispatch)}\n                ></i>\n                <Link to={`/edit/${id}`}>\n                  <i\n                    className=\"fas fa-pencil-alt\"\n                    style={{\n                      cursor: \"pointer\",\n                      color: \"black\",\n                      float: \"right\",\n                      marginRight: \"1rem\"\n                    }}\n                  ></i>\n                </Link>\n              </h1>\n              {show ? (\n                <ul className=\"list-group\">\n                  <li className=\"list-group-item\">Email : {email}</li>\n                  <li className=\"list-group-item\">Tel : {phone}</li>\n                </ul>\n              ) : null}\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nContact.defaultProps = {\n  name: \"Miloud\",\n  email: \"miloud@esi.dz\",\n  phone: \"333-333-3333\"\n};\n\nContact.propTypes = {\n  contact: propTypes.object.isRequired\n};\n\nexport default Contact;\n","import React, { Component } from \"react\";\nimport Contact from \"./Contact\";\nimport { Consumer } from \"../../context\";\n\nclass Contacts extends Component {\n  render() {\n    return (\n      <Consumer>\n        {value => {\n          const { contacts } = value;\n          return (\n            <React.Fragment>\n              <h1 className=\"display-4\">\n                <span style={{ color: \"red\" }}>Contact</span> List\n              </h1>\n              {contacts.map(contact => (\n                <Contact key={contact.id} contact={contact} />\n              ))}\n            </React.Fragment>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nexport default Contacts;\n","import React from \"react\";\nimport propTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\n\nconst Header = props => {\n  const { branding } = props;\n  return (\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\n      <div className=\"container\">\n        <Link to=\"/\" className=\"navbar-brand\">\n          {branding}\n        </Link>\n        <div>\n          <ul className=\"navbar-nav mr-auto\">\n            <li className=\"nav-item\">\n              <Link to=\"/\" className=\"nav-link\">\n                <i className=\"fas fa-home\"></i> Home\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to=\"/ajouter\" className=\"nav-link\">\n                <i className=\"fas fa-plus\"></i> Ajouter\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to=\"/about\" className=\"nav-link\">\n                <i className=\"fas fa-question\"></i> About\n              </Link>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </nav>\n  );\n};\n\nHeader.defaultProps = {\n  branding: \"My App\"\n};\nHeader.propTypes = {\n  branding: propTypes.string.isRequired\n};\n\nexport default Header;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classnames from \"classnames\";\n\nconst TextInputGroup = ({\n  label,\n  name,\n  placeholder,\n  type,\n  value,\n  onChange,\n  error\n}) => {\n  return (\n    <div className=\"form-group\">\n      <label htmlFor={name}>{label}</label>\n      <input\n        type={type}\n        name={name}\n        className={classnames(\"form-control form-control-lg\", {\n          \"is-invalid\": error\n        })}\n        placeholder={placeholder}\n        value={value}\n        onChange={onChange}\n      ></input>\n      {error && <div className=\"invalid-feedback\">{error}</div>}\n    </div>\n  );\n};\n\nTextInputGroup.defaultProps = {\n  type: \"text\"\n};\n\nTextInputGroup.propTypes = {\n  label: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  placeholder: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  error: PropTypes.string\n};\n\nexport default TextInputGroup;\n","import React, { Component } from \"react\";\nimport { Consumer } from \"../../context\";\nimport axios from \"axios\";\nimport TextInputGroup from \"../layouts/TextInputGroup\";\n\nclass AddContact extends Component {\n  state = {\n    name: \"\",\n    email: \"\",\n    phone: \"\",\n    errors: {}\n  };\n  onSubmit = async (dispatch, e) => {\n    e.preventDefault();\n    const { name, email, phone } = this.state;\n\n    // Check for errors\n    if (name === \"\") {\n      this.setState({ errors: { name: \"Name is required\" } });\n      return;\n    }\n    if (email === \"\") {\n      this.setState({ errors: { email: \"Email is required\" } });\n      return;\n    }\n    if (phone === \"\") {\n      this.setState({ errors: { phone: \"Num telephone is required\" } });\n      return;\n    }\n\n    const newContact = {\n      name,\n      email,\n      phone\n    };\n\n    const res = await axios.post(\n      \"https://jsonplaceholder.typicode.com/users\",\n      newContact\n    );\n    dispatch({ type: \"ADD_CONTACT\", payload: res.data });\n\n    // Vider les champs apres l'ajout\n    this.setState({\n      name: \"\",\n      email: \"\",\n      phone: \"\",\n      errors: {}\n    });\n\n    this.props.history.push(\"/\");\n  };\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\n  render() {\n    const { name, email, phone, errors } = this.state;\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n          return (\n            <div className=\"card mb-3\">\n              <div className=\"card-header\">Ajouter contact</div>\n              <div className=\"card-body\">\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\n                  <TextInputGroup\n                    name=\"name\"\n                    label=\"Nom\"\n                    placeholder=\"Entrer votre nom\"\n                    value={name}\n                    onChange={this.onChange}\n                    error={errors.name}\n                  />\n                  <TextInputGroup\n                    name=\"email\"\n                    type=\"email\"\n                    label=\"Email\"\n                    placeholder=\"Entrer votre email\"\n                    value={email}\n                    onChange={this.onChange}\n                    error={errors.email}\n                  />\n                  <TextInputGroup\n                    name=\"phone\"\n                    label=\"Tel\"\n                    placeholder=\"Entrer votre num telephone\"\n                    value={phone}\n                    onChange={this.onChange}\n                    error={errors.phone}\n                  />\n\n                  <button type=\"submit\" className=\"btn btn-light btn-block\">\n                    Ajouter contact\n                  </button>\n                </form>\n              </div>\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nexport default AddContact;\n","import React from \"react\";\n\nexport default () => {\n  return (\n    <div>\n      <h1 className=\"display-4\">About Contact Manager</h1>\n      <p className=\"lead\">Simple App to manage contacts</p>\n      <p className=\"text-secondary\">Version 1.0.0</p>\n    </div>\n  );\n};\n","import React from \"react\";\n\nexport default function NotFound() {\n  return (\n    <div>\n      <h1 className=\"displsy-4\">404 Page Not Found</h1>\n      <p className=\"lead\">Sorry, This page doesn't exist</p>\n    </div>\n  );\n}\n","import React, { Component } from \"react\";\nimport { Consumer } from \"../../context\";\nimport axios from \"axios\";\nimport TextInputGroup from \"../layouts/TextInputGroup\";\n\nclass EditContact extends Component {\n  state = {\n    name: \"\",\n    email: \"\",\n    phone: \"\",\n    errors: {}\n  };\n\n  async componentDidMount(props) {\n    const { id } = this.props.match.params;\n    const res = await axios.get(\n      `https://jsonplaceholder.typicode.com/users/${id}`\n    );\n\n    const contact = res.data;\n    this.setState({\n      name: contact.name,\n      email: contact.email,\n      phone: contact.phone\n    });\n  }\n\n  onSubmit = async (dispatch, e) => {\n    e.preventDefault();\n    const { name, email, phone } = this.state;\n\n    // Check for errors\n    if (name === \"\") {\n      this.setState({ errors: { name: \"Name is required\" } });\n      return;\n    }\n    if (email === \"\") {\n      this.setState({ errors: { email: \"Email is required\" } });\n      return;\n    }\n    if (phone === \"\") {\n      this.setState({ errors: { phone: \"Num telephone is required\" } });\n      return;\n    }\n\n    const updContact = {\n      name,\n      email,\n      phone\n    };\n\n    const { id } = this.props.match.params;\n    const res = await axios.put(\n      `https://jsonplaceholder.typicode.com/users/${id}`,\n      updContact\n    );\n\n    dispatch({ type: \"EDIT_CONTACT\", payload: res.data });\n\n    // Vider les champs apres l'ajout\n    this.setState({\n      name: \"\",\n      email: \"\",\n      phone: \"\",\n      errors: {}\n    });\n\n    this.props.history.push(\"/\");\n  };\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\n  render() {\n    const { name, email, phone, errors } = this.state;\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n          return (\n            <div className=\"card mb-3\">\n              <div className=\"card-header\">Modifier contact</div>\n              <div className=\"card-body\">\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\n                  <TextInputGroup\n                    name=\"name\"\n                    label=\"Nom\"\n                    placeholder=\"Entrer votre nom\"\n                    value={name}\n                    onChange={this.onChange}\n                    error={errors.name}\n                  />\n                  <TextInputGroup\n                    name=\"email\"\n                    type=\"email\"\n                    label=\"Email\"\n                    placeholder=\"Entrer votre email\"\n                    value={email}\n                    onChange={this.onChange}\n                    error={errors.email}\n                  />\n                  <TextInputGroup\n                    name=\"phone\"\n                    label=\"Tel\"\n                    placeholder=\"Entrer votre num telephone\"\n                    value={phone}\n                    onChange={this.onChange}\n                    error={errors.phone}\n                  />\n\n                  <button type=\"submit\" className=\"btn btn-light btn-block\">\n                    Modifier contact\n                  </button>\n                </form>\n              </div>\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nexport default EditContact;\n","import React from \"react\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Contacts from \"./Components/contacts/Contacts\";\nimport Header from \"./Components/layouts/Header\";\nimport AddContact from \"./Components/contacts/AddContact\";\n\nimport { Provider } from \"./context\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\nimport About from \"./Components/layouts/pages/About\";\nimport NotFound from \"./Components/layouts/pages/NotFound\";\nimport EditContact from \"./Components/contacts/EditContact\";\n\nfunction App() {\n  return (\n    <Provider>\n      <Router>\n        <div className=\"App\">\n          <Header branding=\"Contact Manager Application\" />\n          <div className=\"container\">\n            <Switch>\n              <Route exact path=\"/\" component={Contacts} />\n              <Route exact path=\"/about\" component={About} />\n              <Route exact path=\"/ajouter\" component={AddContact} />\n              <Route exact path=\"/edit/:id\" component={EditContact} />\n              <Route component={NotFound} />\n            </Switch>\n          </div>\n        </div>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}